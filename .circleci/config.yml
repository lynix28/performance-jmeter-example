version: 2.1
jobs:
  Testing:
    docker:
      - image: pridecontrol/jmeter:1.0.0
    steps:
      - checkout
      - run:
          name: "Copy file to work directory"
          command: cp -r . /app/
      - run:
          name: "Add execute permission for 'run.sh'"
          command: |
            cd /app/
            chmod +x run.sh
      - run:
          name: "Run a sample test"
          command: |
            cd /app/
            ./run.sh ./scripts/Load_Test_Script_Example.jmx
      - run:
          name: "Wrapping Test Result"
          command: |
            cd /app/
            tar -cvf artifact.tar ./reports
          when: always
      - store_artifacts:
          path: /app/artifact.tar
  
  Notification-Start:
    docker:
      - image: cimg/node:18.16.0
    steps:
      - checkout
      - run:
          name: "Install Node Package"
          command: npm install dotenv run-func @penseapp/discord-notification
      - run:
          name: "Setup Environment"
          command: |
            declare -i job_id=$CIRCLE_BUILD_NUM+1
            url="https://circleci.com/gh/$CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME/$job_id"
            echo "BUILD=<< pipeline.number >>" >> .env
            echo "REPOSITORY_URL=$CIRCLE_REPOSITORY_URL" >> .env
            echo "BUILD_URL=$url" >> .env
            echo "BRANCH=$CIRCLE_BRANCH" >> .env
            echo "DISCORD_WEBHOOK=$DISCORD_WEBHOOK" >> .env
      - run:
          name: "Send Notification - Start Testing"
          command: npx run-func discord-notification.js test "start"
  
  Notification-Stop:
    docker:
      - image: cimg/node:18.16.0
    steps:
      - checkout
      - run:
          name: "Install Node Package"
          command: npm install dotenv run-func @penseapp/discord-notification
      - run:
          name: "Setup Environment"
          command: |
            declare -i job_id=$CIRCLE_BUILD_NUM-1
            url="https://circleci.com/gh/$CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME/$job_id"
            echo "BUILD=<< pipeline.number >>" >> .env
            echo "REPOSITORY_URL=$CIRCLE_REPOSITORY_URL" >> .env
            echo "BUILD_URL=$url" >> .env
            echo "BRANCH=$CIRCLE_BRANCH" >> .env
            echo "DISCORD_WEBHOOK=$DISCORD_WEBHOOK" >> .env
      - run:
          name: "Send Notification - Stop Testing"
          command: npx run-func discord-notification.js test "stop"


workflows:
  Test-Workflow:
    jobs:
      - Notification-Start
      - Testing:
          requires:
            - Notification-Start
      - Notification-Stop:
          requires:
            - Testing
      